@import url("./fonts.css");
@import url("./colors.css");
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: Vazirmatn;
  list-style: none;
}
html {
  font-size: 62.5%;
}
body {
  font-family: Vazirmatn;
  background-color: var(--color-primary-200);
}
.container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  padding: 1.5rem;
  position: relative;
  width: 100%;
}
header {
  width: 100%;
}
.header__title {
  text-shadow: var(--color-primary-600) 1px 0 5px;
  color: var(--color-primary-700);
  font-size: 1.3rem;
  margin-top: 2rem;
  margin-bottom: 2rem;
}
.header__container {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  color: var(--color-primary-700);
}
.header__content h2 {
  font-size: 1.5rem;
}
.container__todo {
  width: 100%;
}
.form__container {
  margin-top: 1rem;
}
.todo__form {
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  justify-content: center;
  align-items: center;
  position: relative;
  margin-bottom: 1rem;
}
.todo.todo__input {
  border: 1px solid var(--color-primary-100);
  width: 100%;
  font-weight: 700;
  outline: 0;
  padding-left: 1rem;
  box-shadow: var(--color-primary-100) 0px 0 2px;
  transition: all 0.3s ease-in-out;
}
.todo.todo__input::placeholder {
  color: var(--color-primary-600);
}
.todo__input:focus {
  box-shadow: var(--color-primary-400) 0px 0 5px;
}
.add__todo {
  font-size: 1rem;
  font-weight: 900;
  height: 20px;
  width: 20px;
  border-radius: 100%;
  border: 0;
  background-color: var(--color-primary-100);
  color: var(--color-primary-500);
  position: absolute;
  top: 2.5px;
  right: 5px;
  text-align: center;
  border: 1px solid var(--color-primary-200);
  cursor: pointer;
}
.todo {
  height: 25px;
  font-size: 1rem;
  font-weight: 400;
  border: 0;
  border-radius: var(--border-radius-sm);
  background-color: var(--color-primary-50);
  color: var(--color-primary-600);
  margin-bottom: 0.5rem;
  padding: 0.5rem 0.75rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  transition: all 0.3s ease;
}
.completed_text {
  text-decoration: line-through;
}
.completed {
  opacity: 0.5;
}
.todo__title {
  font-weight: bold;
  flex: 1;
  text-align: left;
  padding-top: 0.2rem;
  padding-left: 0.3rem;
}
.todo__createdAt {
  font-size: 1rem;
  padding-top: 0.3rem;
}
.todo button {
  margin-left: 0.5rem;
  cursor: pointer;
  width: 15px;
  height: 15px;
  border-radius: var(--border-radius-tiny);
  background-color: var(--color-primary-200);
  border: 0;
  display: flex;
  justify-content: center;
  align-items: center;
}
.icon {
  width: 10px;
  height: 10px;
}
.select {
  position: relative;
  width: 200px;
  display: flex;
  flex-direction: row;
  justify-content: start;
  align-items: center;
}
.filter-todos {
  width: 60%;
  height: 25px;
  padding: 0rem 0.5rem;
  border: 0;
  border-radius: var(--border-radius-tiny);
  background-color: var(--color-primary-0);
  font-size: 1.2rem;
  appearance: none;
  cursor: pointer;
  border: 1px solid var(--color-primary-100);
  outline: none;
  font-weight: 700;
}
.select::after {
  content: "\25BC";
  position: absolute;
  right: 70px;
  top: 50%;
  transform: translateY(-50%);
  pointer-events: none;
  background-color: var(--color-primary-100);
  width: 15px;
  height: 13px;
  padding-top: 0.3rem;
  border-radius: var(--border-radius-tiny);
  color: var(--color-primary-500);
  display: flex;
  justify-content: center;
  align-items: center;
}

.modal {
  position: absolute;
  background-color: var(--color-primary-0);
  border-radius: var(--border-radius-tiny);
  overflow-y: auto;
  top: 1;
  right: 37px;
  width: 80px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
  z-index: 1000;
}

.hidden {
  display: none;
}
.modal__container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: start;
}
.modalcontent {
  display: flex;
  flex-direction: row;
  justify-content: start;
  align-items: center;
  width: 100%;
  padding-left: 1rem;
  font-weight: 500;
}
.modalcontent:hover {
  background-color: var(--color-primary-300);
}
.modalcontent > p {
  padding-top: 0.25rem;
  padding-left: 0.5rem;
}
.modalcontent > p,
.modalcontent > svg,
.modalcontent > use {
  pointer-events: none;
}
.btn__event > svg,
.btn__event > use {
  pointer-events: none;
}
.modalcontent.todoedit > p {
  color: var(--color-primary-600);
}
.modalcontent.tododone > p {
  color: var(--color-primary-600);
}
.modalcontent.tododelete > p {
  color: var(--color-red-500);
}
/* EditModal */
.backdrop {
  position: fixed;
  inset: 0;
  width: 100%;
  /* height: 100vh; */
  background-color: rgba(0, 0, 0, 0.3);
  backdrop-filter: blur(3px);
  z-index: 10;
}
.edit__modal {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translateX(-50%) translateY(-50%);
  background-color: var(--color-primary-0);
  border-radius: var(--border-radius-lg);
  padding: 2rem;
  width: calc(100vw - 4rem);
  max-width: 60rem;
  z-index: 2;
  max-height: calc(100vh - 4rem);
  overflow-y: auto;
}
.edit__modal__header {
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  margin-bottom: 2rem;
  padding-bottom: 1rem;
  font-size: 1.7rem;
  font-weight: 700;
  border-bottom: 1px solid var(--color-primary-100);
}
.close-modal {
  position: absolute;
  top: 0;
  right: 0;
  background: none;
  border: none;
  cursor: pointer;
}
.edit__todo__form {
  width: 100%;
}
.edit__todo__form label {
  width: 100%;
  display: block;
  font-size: 2.5rem;
  margin-bottom: 2rem;
  text-align: right;
}
.editInput {
  border: 1px solid var(--color-primary-100);
  width: 100%;
  height: 55px;
  border-radius: var(--border-radius-lg);
  font-weight: 700;
  outline: 0;
  padding-left: 1rem;
  box-shadow: var(--color-primary-100) 0px 0 2px;
  transition: all 0.3s ease-in-out;
  font-size: 1.5rem;
}
.editInput:focus {
  box-shadow: var(--color-primary-400) 0px 0 5px;
}
.btn__container {
  margin-top: 5rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 2rem;
}
.btn {
  width: 50%;
  border-radius: var(--border-radius-lg);
  padding: 1rem 0;
  font-size: 2rem;
  font-weight: 700;
  margin-top: 2rem;
  cursor: pointer;
  border: 2px solid var(--color-primary-700);
}
.submit--btn {
  background-color: var(--color-primary-700);
  color: var(--color-primary-0);
}
.close--btn {
  background-color: var(--color-primary-0);
  color: var(--color-primary-700);
}
@media screen and (min-width: 768px) {
  .modal {
    border-radius: var(--border-radius-sm);
  }
  .header__title {
    font-size: 3rem;
  }
  .header__content h2 {
    font-size: 3rem;
  }
  .filter-todos {
    font-size: 1.5rem;
  }
  .edit__modal__header {
    font-size: 2rem;
  }
}

@media screen and (min-width: 1024px) {
  .container {
    width: 1500px;
    margin: 0 auto;
  }
  .todo.todo__input {
    height: 60px;
  }
  .todo {
    height: 50px;
    font-size: 2.5rem;
    margin-bottom: 1.5rem;
  }
  .add__todo {
    font-size: 3rem;
    height: 50px;
    width: 50px;
    top: 5px;
    right: 10px;
    display: flex;
    justify-content: center;
    align-items: center;
  }
  .todo__createdAt {
    font-size: 2rem;
  }
  .todo button {
    margin: 0 1rem;
    cursor: pointer;
    width: 25px;
    height: 25px;
  }
  .icon {
    width: 20px;
    height: 20px;
  }
  .header__title {
    font-size: 4rem;
  }
  .header__content h2 {
    font-size: 4rem;
  }
  .filter-todos {
    width: 70%;
    height: 40px;
    padding: 0rem 1rem;
  }
  .select::after {
    width: 20px;
    height: 20px;
  }
  .modal {
    width: 150px;
    right: 56px;
  }
  .modalcontent {
    padding-left: 1rem;
    padding-top: 1rem;
    padding-bottom: 1rem;
  }
  .modalcontent > p {
    font-size: 1.7rem;
  }
}

/* checkbox */
@supports (-webkit-appearance: none) or (-moz-appearance: none) {
  .checkbox-wrapper-13 input[type="checkbox"] {
    --active: #275efe;
    --active-inner: #fff;
    --focus: 2px rgba(39, 94, 254, 0.3);
    --border: #bbc1e1;
    --border-hover: #275efe;
    --background: #fff;
    --disabled: #f6f8ff;
    --disabled-inner: #e1e6f9;
    -webkit-appearance: none;
    -moz-appearance: none;
    height: 21px;
    outline: none;
    display: inline-block;
    vertical-align: top;
    position: relative;
    margin: 0;
    cursor: pointer;
    border: 1px solid var(--bc, var(--border));
    background: var(--b, var(--background));
    transition: background 0.3s, border-color 0.3s, box-shadow 0.2s;
  }
  .checkbox-wrapper-13 input[type="checkbox"]:after {
    content: "";
    display: block;
    left: 0;
    top: 0;
    position: absolute;
    transition: transform var(--d-t, 0.3s) var(--d-t-e, ease),
      opacity var(--d-o, 0.2s);
  }
  .checkbox-wrapper-13 input[type="checkbox"]:checked {
    --b: var(--active);
    --bc: var(--active);
    --d-o: 0.3s;
    --d-t: 0.6s;
    --d-t-e: cubic-bezier(0.2, 0.85, 0.32, 1.2);
  }
  .checkbox-wrapper-13 input[type="checkbox"]:disabled {
    --b: var(--disabled);
    cursor: not-allowed;
    opacity: 0.9;
  }
  .checkbox-wrapper-13 input[type="checkbox"]:disabled:checked {
    --b: var(--disabled-inner);
    --bc: var(--border);
  }
  .checkbox-wrapper-13 input[type="checkbox"]:disabled + label {
    cursor: not-allowed;
  }
  .checkbox-wrapper-13
    input[type="checkbox"]:hover:not(:checked):not(:disabled) {
    --bc: var(--border-hover);
  }
  .checkbox-wrapper-13 input[type="checkbox"]:focus {
    box-shadow: 0 0 0 var(--focus);
  }
  .checkbox-wrapper-13 input[type="checkbox"]:not(.switch) {
    width: 21px;
  }
  .checkbox-wrapper-13 input[type="checkbox"]:not(.switch):after {
    opacity: var(--o, 0);
  }
  .checkbox-wrapper-13 input[type="checkbox"]:not(.switch):checked {
    --o: 1;
  }
  .checkbox-wrapper-13 input[type="checkbox"] + label {
    display: inline-block;
    vertical-align: middle;
    cursor: pointer;
    margin-left: 4px;
  }

  .checkbox-wrapper-13 input[type="checkbox"]:not(.switch) {
    border-radius: 7px;
  }
  .checkbox-wrapper-13 input[type="checkbox"]:not(.switch):after {
    width: 5px;
    height: 9px;
    border: 2px solid var(--active-inner);
    border-top: 0;
    border-left: 0;
    left: 7px;
    top: 4px;
    transform: rotate(var(--r, 20deg));
  }
  .checkbox-wrapper-13 input[type="checkbox"]:not(.switch):checked {
    --r: 43deg;
  }
}

.checkbox-wrapper-13 * {
  box-sizing: inherit;
}
.checkbox-wrapper-13 *:before,
.checkbox-wrapper-13 *:after {
  box-sizing: inherit;
}
